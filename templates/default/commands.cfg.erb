# Command definitions
#
# Autogenerated by Chef.

# Host checks
define command {
  command_name    check-host-alive
  command_line    $USER1$/check_ping -H $HOSTADDRESS$ -w 2000,80% -c 3000,100% -p 1
}

# Service checks

define command {
command_name check_website_response
command_line $USER1$/check_website_response.sh -u $ARG1$ -w $ARG2$ -c $ARG3$
}

#event handler for splunk
define command {
  command_name    splunk_forwarder_restart
  command_line    /etc/tealium/scripts/splunk_restart.sh $SERVICESTATE$, $SERVICESTATETYPE$, $SERVICEATTEMPT$
}

define command {
  command_name    check_rabbit_sub
  command_line    $USER1$/rabbitmq_admin.rb -r $ARG1$ -u $ARG2$ -p $ARG3$ -s
}

define command {
  command_name    check_rabbit_queues
  command_line    $USER1$/check_rabbitmq_queue -H $ARG1$ --port 15672 --vhost $ARG2$ --queue $ARG3$ -u $ARG4$ -p $ARG5$ -w $ARG6$ -c $ARG7$
}

define command {
  command_name    check_rabbit_queue
  command_line    $USER1$/check_rabbitmq_queue_totals.sh $ARG1$ $ARG2$ $ARG3$ $ARG4$ $ARG5$
}

define command{
  command_name    check_rabbitmq_queue_availability
  command_line    $USER1$/check_rabbitmq_queue_count.sh $ARG1$ $ARG2$ $ARG3$ $ARG4$ $ARG5$
}

define command{
  command_name    check_rabbitmq_queue_availability_pc1
  command_line    $USER1$/check_rabbitmq_queue_count_pc1.sh $ARG1$ $ARG2$ $ARG3$ $ARG4$ $ARG5$
}

define command{
  command_name    check_rabbitmq_exchange_channel_count
  command_line    $USER1$/check_rabbitmq_exchange_channel_count.sh $ARG1$ $ARG2$ $ARG3$ $ARG4$ $ARG5$ $ARG6$ $ARG7$
}

define command{
  command_name    check_rabbitmq_queue_availability_new
  command_line    $USER1$/check_rabbitmq_queue_count_new.sh $ARG1$ $ARG2$ $ARG3$ $ARG4$ $ARG5$ $ARG6$ $ARG7$
}

define command{
  command_name    check_rabbitmq_queue_availability_new_DD
  command_line    $USER1$/check_rabbitmq_queue_count_new_DD.sh $ARG1$ $ARG2$ $ARG3$ $ARG4$ $ARG5$ $ARG6$ $ARG7$
}

define command{
  command_name    check_rabbitmq_queue_availability_new_pc1
  command_line    $USER1$/check_rabbitmq_queue_count_new_pc1.sh $ARG1$ $ARG2$ $ARG3$ $ARG4$ $ARG5$ $ARG6$ $ARG7$
}

define command{
  command_name    check_rabbitmq_queue_availability_west
  command_line    $USER1$/check_rabbitmq_queue_count_west.sh $ARG1$ $ARG2$ $ARG3$ $ARG4$ $ARG5$
}

define command{
  command_name    check_rabbitmq_queue_consumers
  command_line    $USER1$/check_rabbitmq_queue_consumers.sh $ARG1$ $ARG2$ $ARG3$ $ARG4$ $ARG5$ $ARG6$ $ARG7$
}

define command{
  command_name    check_rabbitmq_queue_consumers_pc1
  command_line    $USER1$/check_rabbitmq_queue_consumers_pc1.sh $ARG1$ $ARG2$ $ARG3$ $ARG4$ $ARG5$ $ARG6$ $ARG7$
}

define command{
  command_name    check_rabbitmq_queue_consumers_multi
  command_line    $USER1$/check_rabbitmq_queue_consumers_multi.sh $ARG1$ $ARG2$ $ARG3$ $ARG4$ $ARG5$ $ARG6$ $ARG7$ $ARG8$
}

define command{
  command_name    check_rabbitmq_queue_consumers_multi_pc1
  command_line    $USER1$/check_rabbitmq_queue_consumers_multi_pc1.sh $ARG1$ $ARG2$ $ARG3$ $ARG4$ $ARG5$ $ARG6$ $ARG7$ $ARG8$
}

define command{
  command_name    check_rabbitmq_queue_consumers_multi_vp
  command_line    $USER1$/check_rabbitmq_queue_consumers_multi_vp.sh $ARG1$ $ARG2$ $ARG3$ $ARG4$ $ARG5$ $ARG6$ $ARG7$ $ARG8$
}

define command{
  command_name    check_rabbitmq_queue_consumers_lookup
  command_line    $USER1$/check_rabbitmq_queue_consumers_lookup.sh $ARG1$ $ARG2$ $ARG3$ $ARG4$ $ARG5$ $ARG6$ $ARG7$ $ARG8$
}

#define command{
#  command_name    check_rabbitmq_objects_by_ssh
#  command_line    exec ssh $HOSTADDRESS$ sudo /usr/lib/nagios/plugins/check_rabbitmq_objects --extra-opts=$ARG1$
#}

define command {
  command_name    check_jmx_esp_events_rejected
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud-Metrics:name=MessageRouter-TotalEventsRejectedMeter" -A MeanRate -c $ARG1$
}

define command {
  command_name    check_jmx_uconnect_messages_queued_local
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=RemoteSenderService" -A QueueSize -c $ARG1$
}

define command {
  command_name    check_jmx_uconnect_messages_queued_cross_region
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=LocalSenderService" -A QueueSize -c $ARG1$
}

define command {
  command_name    check_jmx_uconnect_requests_received
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud-Metrics:name=Handler-Jetty-ProcessingTime" -A OneMinuteRate -c$ARG1$:
}

define command {
  command_name    check_jmx_data_distributor_actions_processed
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud-Metrics:name=DataDistributor.actions.processed.size" -A OneMinuteRate -c$ARG1$:
}

define command {
  command_name    check_jmx_data_distributor_invalid_message_size
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud-Metrics:name=DataDistributor.messages.invalid.size" -A OneMinuteRate -c $ARG1$
}

define command {
  command_name    check_jmx_data_distributor_received_messages
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud-Metrics:name=DataDistributor.messages.received.size" -A OneMinuteRate -c$ARG1$:
} 

define command {
  command_name    check_jmx_esp_to_dd_failed_messages
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=DataDistributor" -A TotalMessagesFailed -c $ARG1$
}

define command {
  command_name    check_jmx_esp_total_action_publish_failures
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=S2SFilteredStreamHandler" -A TotalActionPublishFailures -c $ARG1$
}

define command {
  command_name    check_jmx_VP_node_status
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=VisitorProcessorCluster" -A NodeStatus -w ^$ARG1$
}

define command {  
  command_name    check_jmx_VP_ignored_visitors
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud-Metrics:name=VisitorProcessor-TotalEventsIgnoredDueToMaxVisitorsLimit" -A Count -w $ARG1$ -c $ARG2$
}

define command {
  command_name    check_jmx_VP_max_visitor_count
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=VisitorManager" -A ActiveVisitorCount -c $ARG1$
}

define command {
 command_name    check_jmx_VP_ignored_visitors_5_old
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud-Metrics:name=VisitorProcessor-TotalEventsIgnoredDueToMaxVisitorsLimit" -A FiveMinuteRate -w $ARG1$ -c $ARG2$
	}

define command {
  command_name    check_jmx_VP_ignored_visitors_5_new
  command_line    $USER1$/vp_ignored_events.sh $HOSTADDRESS$
}

define command {
  command_name    check_jmx_VP_expire_latency
  command_line    $USER1$/check_vp_expire_latency $HOSTADDRESS$ $ARG1$ $ARG2$
}

define command {
  command_name    check_jmx_VP_expire_latency_east
  command_line    $USER1$/check_vp_expire_latency_east $HOSTADDRESS$ $ARG1$ $ARG2$
}

<% unless node['domain'].match(/^prod1?.\w{2}-\w{2}/) -%>

#define command {
# command_name    check_jmx_VP_ignored_visitors
#  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud-Metrics:type=VisitorProcessor-TotalEventsIgnoredDueToMaxVisitorsLimit" -A Count -w $ARG1$ -c $ARG2$
#}

#define command {
#  command_name    check_jmx_VP_ignored_visitors_5
#  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud-Metrics:type=VisitorProcessor-TotalEventsIgnoredDueToMaxVisitorsLimit" -A FivenMinuteRate -w $ARG1$ -c $ARG2$
#}

define command {
  command_name    check_jmx_dc_dd_total_messages_received
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=DataDistributor" -A TotalMessagesReceived
}

define command {
  command_name    check_jmx_heap
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O java.lang:type=Memory -A HeapMemoryUsage -K used -I HeapMemoryUsage -J used -vvvv
}

define command {
  command_name    check_jmx_threads
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "java.lang:type=Threading" -A ThreadCount -w $ARG1$ -c $ARG2$
}

define command {
  command_name    check_jmx_dc_mr_total_messages_routed
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9002/jmxrmi -O "DataCloud:type=MessageRouter" -A TotalMessagesRouted
}

define command {
  command_name    check_jmx_dc_mr_total_events_routed
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9002/jmxrmi -O "DataCloud:type=MessageRouter" -A TotalEventsRouted
}

define command {
  command_name    check_jmx_dc_mr_total_messages_received
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9002/jmxrmi -O "DataCloud:type=MessageRouter" -A TotalMessagesReceived
}

define command {
  command_name    check_jmx_dc_mr_total_events_received
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9002/jmxrmi -O "DataCloud:type=MessageRouter" -A TotalEventsReceived
}

define command {
  command_name    check_jmx_dc_qa_total_query_results_received
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9003/jmxrmi -O "DataCloud:type=QueryAggregator" -A TotalQueryResultsReceived
}

define command {
  command_name    check_jmx_dc_qa_total_messages_received
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9003/jmxrmi -O "DataCloud:type=QueryAggregator" -A TotalMessagesReceived
}

define command {
  command_name    check_jmx_dc_qa_total_queries_received
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9003/jmxrmi -O "DataCloud:type=QueryAggregator" -A TotalQueriesReceived
}

define command {
  command_name    check_jmx_dc_qa_active_query_count
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9003/jmxrmi -O "DataCloud:type=QueryAggregator" -A ActiveQueryCount
}

define command {
  command_name    check_jmx_dc_qa_total_unknown_query_results
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9003/jmxrmi -O "DataCloud:type=QueryAggregator" -A TotalUnknownQueryResults
}

define command {
  command_name    check_jmx_dc_qa_unknown_queries_with_queued_visitors
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9003/jmxrmi -O "DataCloud:type=QueryAggregator" -A UnknownQueriesWithQueuedVisitors
}

define command {
  command_name    check_jmx_dc_qa_unknown_queries_queued_visitor_count
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9003/jmxrmi -O "DataCloud:type=QueryAggregator" -A UnknownQueriesQueuedVisitorCount
}

define command {
  command_name    check_jmx_dc_qa_rebalanced_objects_received
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9003/jmxrmi -O "DataCloud:type=QueryAggregatorCluster" -A RebalancedObjectsReceived
}

define command {
  command_name    check_jmx_dc_qa_rebalanced_objects_sent
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9003/jmxrmi -O "DataCloud:type=QueryAggregatorCluster" -A RebalancedObjectsSent
}

define command {
  command_name    check_jmx_dc_qa_qm_queries_recieved
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9003/jmxrmi -O "DataCloud:type=QueryMonitor" -A QueriesReceived
}

define command {
  command_name    check_jmx_dc_qa_qm_active_query_count
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9003/jmxrmi -O "DataCloud:type=QueryManager" -A ActiveQueryCount
}

define command {
  command_name    check_jmx_dc_vp_active_visitor
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9004/jmxrmi -O "DataCloud:type=EventProcessor" -A ActiveVisitorEventCount
}

define command {
  command_name    check_jmx_dc_vp_visitors_to_aggregator
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9004/jmxrmi -O "DataCloud:type=QueryEngine" -A TotalVisitorsSentToAggregator
}

define command {
  command_name    check_jmx_dc_vp_visitors_streamed
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9004/jmxrmi -O "DataCloud:type=QueryEngine" -A TotalVisitorsStreamed
}

define command {
  command_name    check_jmx_dc_vp_queries_received
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9004/jmxrmi -O "DataCloud:type=QueryMonitor" -A QueriesReceived
}

define command {
  command_name    check_jmx_dc_vp_active_visitor_count
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9004/jmxrmi -O "DataCloud:type=VisitorManager" -A ActiveVisitorCount
}

define command {
  command_name    check_jmx_dc_vp_visitors_persisted
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9004/jmxrmi -O "DataCloud:type=VisitorManager" -A VisitorsPersisted
}

define command {
  command_name    check_jmx_dc_vp_total_events_received
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9004/jmxrmi -O "DataCloud:type=VisitorProcessor" -A TotalEventsReceived
}

define command {
  command_name    check_jmx_dc_vp_active_query_count
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9004/jmxrmi -O "DataCloud:type=QueryManager" -A ActiveQueryCount
}

define command {
  command_name    check_jmx_dc_vp_rebalanced_objects_received
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9004/jmxrmi -O "DataCloud:type=VisitorProcessorCluster" -A RebalancedObjectsReceived
}

define command {
  command_name    check_jmx_dc_vp_rebalanced_objects_sent
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9004/jmxrmi -O "DataCloud:type=VisitorProcessorCluster" -A RebalancedObjectsSent
}

define command {
  command_name    check_jmx_dc_vs_total_visitors_request_reveived_count
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9005/jmxrmi -O "DataCloud:type=VisitorService" -A TotalVisitorsRequestReceivedCount
}

define command {
  command_name    check_jmx_dc_vs_total_visitors_found_in_cache_count
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9005/jmxrmi -O "DataCloud:type=VisitorService" -A TotalVisitorsFoundInCacheCount
}

define command {
  command_name    check_jmx_dc_vs_total_visitors_is_stale_in_cache_count
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9005/jmxrmi -O "DataCloud:type=VisitorService" -A TotalVisitorsIsStaleInCacheCount
}

define command {
  command_name    check_jmx_dc_vs_total_visitors_request_send_to_vp_count
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9005/jmxrmi -O "DataCloud:type=VisitorService" -A TotalVisitorsRequestSendToVPCount
}

define command {
  command_name    check_jmx_dc_vs_total_visitors_request_recieved_from_vp_count
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9005/jmxrmi -O "DataCloud:type=VisitorService" -A TotalVisitorsRequestReceivedFromVPCount
}

define command {
  command_name    check_jmx_dc_vs_current_visitor_cache_size
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9005/jmxrmi -O "DataCloud:type=VisitorService" -A CurrentVisitorCacheSize
}

define command {
  command_name    check_jmx_dc_vs_total_visitors_request_received_count
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9005/jmxrmi -O "DataCloud:type=VisitorService" -A TotalVisitorsRequestReceivedCount
}

define command {
  command_name    check_jmx_message_received
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud-Metrics:name=MessageRouter-TotalMessageReceived" -A OneMinuteRate -c $ARG1$\:
}
<% else -%>

define command {
  command_name    check_jmx_dc_dd_total_messages_received
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=DataDistributor" -A TotalMessagesReceived
}

define command {
  command_name    check_jmx_heap
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O java.lang:type=Memory -A HeapMemoryUsage -K used -I HeapMemoryUsage -J used -vvvv -c $ARG1$
  #command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O java.lang:type=Memory -A HeapMemoryUsage -K used -I HeapMemoryUsage -J used -vvvv
}

define command {
  command_name    check_jmx_flush
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud-Metrics:name=AU-EventStore-FlushMeter" -A MeanRate -c$ARG1$:
}

<% if @app_environment ==  -%>
define command {
  command_name    check_jmx_message_received
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud-Metrics:name=MessageRouter-TotalMessageReceived" -A OneMinuteRate -c $ARG1$\:
}
<% end -%>

define command {
  command_name    check_jmx_threads
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "java.lang:type=Threading" -A ThreadCount -w $ARG1$ -c $ARG2$ 
}

define command {
  command_name    check_jmx_dc_vp_active_visitor
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=EventProcessor" -A ActiveVisitorEventCount
}

define command {
  command_name    check_jmx_dc_vp_visitors_to_aggregator
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=QueryEngine" -A TotalVisitorsSentToAggregator
}

define command {
  command_name	  check_jmx_dc_vp_visitors_streamed
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=QueryEngine" -A TotalVisitorsStreamed    
}

define command {
  command_name    check_jmx_dc_vp_queries_received
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=QueryMonitor" -A QueriesReceived
}

define command {
  command_name    check_jmx_dc_vp_active_visitor_count
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=VisitorManager" -A ActiveVisitorCount
}

define command {
  command_name    check_jmx_dc_vp_visitors_persisted
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=VisitorManager" -A VisitorsPersisted
}

define command {
  command_name    check_jmx_dc_vp_total_events_received
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=VisitorProcessor" -A TotalEventsReceived
}

define command {
  command_name    check_jmx_dc_vp_active_query_count
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=QueryManager" -A ActiveQueryCount
}

define command {
  command_name    check_jmx_dc_vp_rebalanced_objects_received
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=VisitorProcessorCluster" -A RebalancedObjectsReceived
}

define command {
  command_name    check_jmx_dc_vp_rebalanced_objects_sent
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=VisitorProcessorCluster" -A RebalancedObjectsSent
}

define command {
  command_name    check_jmx_dc_qa_total_query_results_received
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=QueryAggregator" -A TotalQueryResultsReceived
}

define command {
  command_name    check_jmx_dc_qa_total_messages_received
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=QueryAggregator" -A TotalMessagesReceived
}

define command {
  command_name    check_jmx_dc_qa_total_queries_received
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=QueryAggregator" -A TotalQueriesReceived
}

define command {
  command_name    check_jmx_dc_qa_active_query_count
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=QueryAggregator" -A ActiveQueryCount
}

define command {
  command_name    check_jmx_dc_qa_total_unknown_query_results
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=QueryAggregator" -A TotalUnknownQueryResults
}

define command {
  command_name    check_jmx_dc_qa_unknown_queries_with_queued_visitors
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=QueryAggregator" -A UnknownQueriesWithQueuedVisitors
}

define command {
  command_name    check_jmx_dc_qa_unknown_queries_queued_visitor_count
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=QueryAggregator" -A UnknownQueriesQueuedVisitorCount
}

define command {
  command_name    check_jmx_dc_qa_rebalanced_objects_received
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=QueryAggregatorCluster" -A RebalancedObjectsReceived
}

define command {
  command_name    check_jmx_dc_qa_rebalanced_objects_sent
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=QueryAggregatorCluster" -A RebalancedObjectsSent
}

define command {
  command_name    check_jmx_dc_qa_qm_queries_recieved
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=QueryMonitor" -A QueriesReceived
}

define command {
  command_name    check_jmx_dc_qa_qm_active_query_count
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=QueryManager" -A ActiveQueryCount
}

define command {
  command_name    check_jmx_dc_mr_total_messages_routed
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=MessageRouter" -A TotalMessagesRouted
}

define command {
  command_name    check_jmx_dc_mr_total_events_routed
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=MessageRouter" -A TotalEventsRouted
}

define command {
  command_name    check_jmx_dc_mr_total_messages_received
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=MessageRouter" -A TotalMessagesReceived
}

define command {
  command_name    check_jmx_dc_mr_total_events_received
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=MessageRouter" -A TotalEventsReceived
}

define command {
  command_name    check_jmx_dc_vs_total_visitors_request_reveived_count
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=VisitorService" -A TotalVisitorsRequestReceivedCount
}

define command {
  command_name    check_jmx_dc_vs_total_visitors_found_in_cache_count
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=VisitorService" -A TotalVisitorsFoundInCacheCount
}

define command {
  command_name    check_jmx_dc_vs_total_visitors_is_stale_in_cache_count
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=VisitorService" -A TotalVisitorsIsStaleInCacheCount
}

define command {
  command_name    check_jmx_dc_vs_total_visitors_request_send_to_vp_count
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=VisitorService" -A TotalVisitorsRequestSendToVPCount
}

define command {
  command_name    check_jmx_dc_vs_total_visitors_request_recieved_from_vp_count
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=VisitorService" -A TotalVisitorsRequestReceivedFromVPCount
}

define command {
  command_name    check_jmx_dc_vs_current_visitor_cache_size
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=VisitorService" -A CurrentVisitorCacheSize
}

define command {
  command_name    check_jmx_dc_vs_total_visitors_request_received_count
  command_line    $USER1$/check_jmx -U service:jmx:rmi:///jndi/rmi://$HOSTADDRESS$:9001/jmxrmi -O "DataCloud:type=VisitorService" -A TotalVisitorsRequestReceivedCount
} 
<% end -%>


define command {
  command_name    check_ec2_count
  command_line    $USER1$/count_ec2_instances.sh
}

define command {
  command_name    check_solr_proc
  command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_solr_proc -t 20
}

define command {
  command_name    check_stompserver
  command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_stompserver -t 20
}

define command {
  command_name    check_chef_client
  command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_chef_client -t 20
}

define command {
  command_name    check_dir_files
  command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_dir_files -t 60
}

define command {
  command_name    check_jmx
  command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_jmx -t 20
}

define command {
  command_name    check_collectd_client
  command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_collectd_client -t 20
}

define command {
  command_name    check_rabbitmq
  command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_rabbitmq -t 20
}

define command {
  command_name    check_authz
  command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_authz -t 20
}

define command {
  command_name    check_audit
  command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_audit -t 20
}

define command {
  command_name    check-nagios
  command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_nagios -t 20
}

define command {
  command_name    check_file_age
  command_line    $USER1$/check_by_ssh -H $HOSTADDRESS$ -C "/usr/local/bin/check_file -i -p $ARG1$ -w $ARG2$ -c $ARG3$" -l root
}

define command {
  command_name    check_file_count
  command_line    $USER1$/check_by_ssh -H $HOSTADDRESS$ -C "/usr/lib/nagios/checks/file_queues.rb -t count -p $ARG1$ -w $ARG2$ -c $ARG3$" -l app
}

define command {
  command_name    check_log
  command_line    $USER1$/check_by_ssh -H $HOSTADDRESS$ -C "/usr/lib64/nagios/plugins/check_log -F $ARG1$ -O /tmp/nagios.logcheck.processed -q $ARG2$" -l root
}

define command {
  command_name    check_solr
  command_line    $USER1$/check_solr.rb -c 10 -h $HOSTADDRESS$ -r 10 -p $ARG1$

}

define command {
  command_name    query_solr
  command_line    $USER1$/check_solr.rb -c 10 -h $HOSTADDRESS$ -r 10 -p $ARG1$ -q $ARG2$

}

define command {
  command_name    check_mem
  command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_mem -t 20
}


define command {
  command_name	check_query_count
  command_line	$USER1$/db_queues.rb -H $HOSTADDRESS$ -u $ARG1$ -p $ARG2$ -d $ARG3$ -q $ARG4$ -w $ARG5$ -c $ARG6$
}

define command {
  command_name    check_local_disk
  command_line    $USER1$/check_disk -w $ARG1$ -c $ARG2$ -p $ARG3$
}

define command {
  command_name    check_local_load
  command_line    $USER1$/check_load -w $ARG1$ -c $ARG2$
}

define command {
  command_name    check_local_procs
  command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_total_procs -t 20
}

define command {
  command_name    check_zombie_procs
  command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_zombie_procs -t 20
}

define command {
  command_name    check_local_users
  command_line    $USER1$/check_users -w $ARG1$ -c $ARG2$
}

define command {
  command_name    check_local_log
  command_line    $USER1$/check_log -F $ARG1$ -O /tmp/nagios.logcheck.processed -q $ARG2$
}

define command {
  command_name    check_dns
  command_line    $USER1$/check_dns -H $ARG1$ -s $HOSTADDRESS$
}

define command {
  command_name    check_ftp
  command_line    $USER1$/check_ftp -H $HOSTADDRESS$
}

define command {
  command_name    check_hpjd
  command_line    $USER1$/check_hpjd -H $HOSTADDRESS$ -C public
}

define command {
  command_name    check_http
  command_line    $USER1$/check_http -I $HOSTADDRESS$ -H $HOSTADDRESS$
}

define command {
  command_name    check_nagios_auth
  command_line    $USER1$/check_http -I $HOSTADDRESS$ $ARG1$ -a nagiosadmin:tealiumnagios14
}

define command {
  command_name    check_utui_auth
  command_line    $USER1$/check_http -I $HOSTADDRESS$ $ARG1$ -a devops@tealium.com:AiO2C7MYiL
}

define command {
  command_name    check_mongodb_backup
  command_line    $USER1$/check_mongodb_backup.py --cluster $ARG1$
}

define command {
  command_name    check_mongodb_snapshots
  command_line    sudo $USER1$/check_mongodb_backup.py --snaps --cluster $ARG1$
}



define command {
  command_name    check_rabbitmq_auth
  command_line    $USER1$/check_http -I $HOSTADDRESS$ $ARG1$ -a admin:"<%= @adminpass %>" -p 15672
}

define command {
  command_name    check_http_content
  command_line    $USER1$/check_http -I $HOSTADDRESS$ -H $ARG1$ -u $ARG2$ -s $ARG3$
}

define command {
  command_name    check_http_port
  command_line    $USER1$/check_http -I $HOSTADDRESS$ -H $HOSTADDRESS$ -p $ARG1$
}

define command {
  command_name    check_http_port_expect
  command_line    $USER1$/check_http -I $HOSTADDRESS$ -H $HOSTADDRESS$ -p $ARG1$ -e $ARG2$
}

define command {
  command_name    check_http_ip_port
  command_line    $USER1$/check_http -I $ARG1$ -H $ARG1$ -p $ARG2$
}

define command {
  command_name    check_mongrel_http_content
  command_line    $USER1$/check_http -I $HOSTADDRESS$ -H $ARG1$ -u $ARG2$ -s $ARG3$ -p $ARG4$
}

define command {
  command_name    check_nntp
  command_line    $USER1$/check_nntp -H $HOSTADDRESS$
}

define command {
  command_name    check_ping
  command_line    $USER1$/check_ping -H $HOSTADDRESS$ -w $ARG1$ -c $ARG2$ -p 5
}

define command {
  command_name    check_pop
  command_line    $USER1$/check_pop -H $HOSTADDRESS$
}

define command {
  command_name	  check_tcp
  command_line	  $USER1$/check_tcp -H $HOSTADDRESS$ -p $ARG1$
}

define command {
  command_name    check_tcp_mongo
  command_line    $USER1$/check_tcp -H $HOSTADDRESS$ -p $ARG1$ -w $ARG2$ -c $ARG3$
}

define command {
  command_name    check_ssh
  command_line    $USER1$/check_ssh $HOSTADDRESS$
}

define command {
  command_name    check_telnet
  command_line    $USER1$/check_tcp -H $HOSTADDRESS$ -p 23
}

define command {
  command_name	  check_udp
  command_line	  $USER1$/check_udp -H $HOSTADDRESS$ -p $ARG1$
}

# 'check_mysql' check mysql connectivity
define command {
	command_name	check_mysql
	command_line	$USER1$/check_mysql -H $ARG1$ -u nagios -p $ARG2$
}

define command {
  command_name	check_mysql_master
	command_line	$USER1$/check_nrpe -H $HOSTADDRESS$ -u $ARG1$ -p $ARG2$
}

# 'check_mysqlrep' command for mysql replication status
define command {
	command_name    check_replication
	command_line    $USER1$/check_nrpe -c check_replication -H $HOSTADDRESS$ -t 20
}

define command {
	command_name	check_mysqlrep
	command_line	$USER1$/check-mysql-slave.pl --host $HOSTADDRESS$ --port $ARG1$ --user replcheck --password $ARG2$ --warn $ARG3$ --crit $ARG4$
}

# nrpe remote host checks
define command {
	command_name    check_nrpe_alive
	command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -t 20
	}

define command {
	command_name    check_nrpe
	command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c $ARG1$ -t 30
	}

define command {
	command_name    check_load
	command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_load -t 20
}

define command {
	command_name    check_dynomite_proc
	command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_dynomite_proc -t 20
}

define command {
	command_name    check_couchdb_proc
	command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_couchdb_proc -t 20
}

define command {
	command_name    check_disk
	command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_$ARG1$ -t 20
}

define command {
	command_name    check_all_disks
	command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_all_disks -t 20
}

define command {
	command_name    check_traffic
	command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c traffic -t 20
}

define command {
	command_name    check_mysqlhealth
	command_line    $USER1$/check_mysqlhealth.pl -H $HOSTADDRESS$ -u nagios -p $ARG1$ --port 3306 --wa 500 --cc 550
}

define command {
	command_name    check_iowait_time
	command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_iowait_time -t 20
}

define command {
	command_name    check_tps
	command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_tps -t 20
}

define command {
	command_name    check_swap
	command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_swap -t 20
}

define command {
	command_name    check_solr_index
	command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_$ARG1$_solr_index -t 20
}

# dummy commands for passive checks

define command{ 
        command_name check_dummy 
        command_line $USER1$/check_dummy $ARG1$ 
 }

define command {
	command_name	no-disk-checks
	command_line	/usr/local/nagios/libexec/check_dummy 2 "CRITICAL: Results of disk checks not coming in!"
}

define command {
	command_name	no-mem-checks
	command_line	/usr/local/nagios/libexec/check_dummy 2 "CRITICAL: Results of memory checks not coming in!"
}


define command {
        command_name    check_HTTP_8080
        command_line    $USER1$/check_http -H $HOSTADDRESS$ -p 8080
}


define command {
        command_name    check_mongo_27017
        command_line    $USER1$/check_http -H $HOSTADDRESS$ -p 27017
}

define command {
        command_name    check_HTTP_Processes
        command_line    $USER1$/check_http -I $HOSTADDRESS$ -H $HOSTADDRESS$
}

define command {
        command_name    check_uconnect_service
        command_line    $USER1$/check_http -I $HOSTADDRESS$ -H $HOSTADDRESS$ -p 9090 -u /ulog/tealium.healthcheck -t 45
}

define command {
        command_name    check_utui_service
        command_line    $USER1$/check_http -I $HOSTADDRESS$ -H $HOSTADDRESS$ -p 8443
}

define command {
        command_name    check_urest_service
        command_line    $USER1$/check_http -I $HOSTADDRESS$ -H $HOSTADDRESS$ -p 8085 -u /urest_service/health
}

define command {
        command_name    check_dc_visitor_service
        command_line    $USER1$/check_http -I $HOSTADDRESS$ -H $HOSTADDRESS$ -p 8085 -u /health
}

define command {
    command_name    check_mongodb
    command_line    $USER1$/nagios-plugin-mongodb/check_mongodb.py -H $HOSTADDRESS$ -A $ARG1$ -P $ARG2$ -W $ARG3$ -C $ARG4$
}

define command {
    command_name    check_mongodb_database
    command_line    $USER1$/nagios-plugin-mongodb/check_mongodb.py -H $HOSTADDRESS$ -A $ARG1$ -P $ARG2$ -W $ARG3$ -C $ARG4$ -d $ARG5$
}


define command {
    command_name    check_mongodb_replicaset
    command_line    $USER1$/nagios-plugin-mongodb/check_mongodb.py -H $HOSTADDRESS$ -A $ARG1$ -P $ARG2$ -W $ARG3$ -C $ARG4$ -r $ARG5$
}

define command {
    command_name    check_mongodb_query
    command_line    $USER1$/nagios-plugin-mongodb/check_mongodb.py -H $HOSTADDRESS$ -A $ARG1$ -P $ARG2$ -W $ARG3$ -C $ARG4$ -q $ARG5$
}

define command {
    command_name    check_webinject
    command_line    sudo $USER1$/webinject/webinject2.pl -n -c $ARG1$
}

define command {
    command_name    check_cdn_maxage
    command_line    $USER1$/monitor-cdn-maxage.pl
}

define command {
    command_name    check_smtp
    command_line    $USER1$/check_smtp -H localhost -p 2525 -U AKIAIU254TK3C4L25ODQ -P Av5w7z7/attZltIki5SjzCa3HzBa8z/Sj5ikiYAwnALK
}

define command {
    command_name    check_events_non_vpc
    command_line    $USER1$/check_events -H localhost -p 2525 -U AKIAIU254TK3C4L25ODQ -P Av5w7z7/attZltIki5SjzCa3HzBa8z/Sj5ikiYAwnALK
}

define command {
    command_name    check_events_vpc
    command_line    $USER1$/check_events -H localhost -p 2525 -U AKIAIU254TK3C4L25ODQ -P Av5w7z7/attZltIki5SjzCa3HzBa8z/Sj5ikiYAwnALK
}

define command{
        command_name    check_mona_udh_service
        command_line    $USER1$/check_mona_udh.py -t $ARG1$ -w 5 -c 10 -W 8 -C 10 --slack_update
}

# Notification
define command {
  command_name  host-notify-by-email
  command_line  /usr/bin/printf "%b" "$LONGDATETIME$\n\n$HOSTALIAS$ $NOTIFICATIONTYPE$ $HOSTSTATE$\n\n$HOSTOUTPUT$\n\nMachine Login: ssh://$HOSTNAME$\n\n Nagios UI Login: http://<%= @url %> " | <%=node['nagios']['server']['mail_command']%> -s "$NOTIFICATIONTYPE$ - $HOSTGROUPNAME$ - $HOSTNAME$ - $HOSTSTATE$!" $CONTACTEMAIL$
}

define command {
  command_name  host-notify-by-sms-email
  command_line  /usr/bin/printf "%b" "$HOSTALIAS$ $NOTIFICATIONTYPE$ $HOSTSTATE$\n\n$HOSTOUTPUT$" | <%=node['nagios']['server']['mail_command']%> -s "$HOSTALIAS$ $HOSTSTATE$!" $CONTACTPAGER$
}

# 'notify-by-email' command definition
define command {
  command_name  service-notify-by-email
  command_line  /usr/bin/printf "%b" "$LONGDATETIME$ - $SERVICEDESC$ $SERVICESTATE$\n\n$HOSTALIAS$  $NOTIFICATIONTYPE$\n\n$SERVICEOUTPUT$\n\nMachine Login: ssh://$HOSTNAME$\n\n Nagios UI Login: http://<%= @url %> " | <%=node['nagios']['server']['mail_command']%> -s "** $NOTIFICATIONTYPE$ - $HOSTGROUPNAME$ - $HOSTNAME$ - $SERVICEDESC$ - $SERVICESTATE$" $CONTACTEMAIL$
}

#define command {
#        command_name process-service-perfdata
#        command_line /usr/lib/nagios/plugins/process_perfdata.pl
#}

#define command {
#        command_name process-host-perfdata
#        command_line /usr/lib/nagios/plugins/process_perfdata.pl -d HOSTPERFDATA
#}

#Casuing an issue with Nagios on 14.04, probably Apache related
#define command {
#       command_name    process-service-perfdata
#       command_line    /usr/lib/pnp4nagios/libexec/process_perfdata.pl
#}

#define command {
#       command_name    process-host-perfdata
#       command_line    /usr/lib/pnp4nagios/libexec/process_perfdata.pl -d HOSTPERFDATA
#}

define command{
	command_name	s2s-resolve
	command_line	/usr/share/tealium/server2server/bin/s2s-resolve.sh SERVICESTATE$ $SERVICESTATETYPE$ $SERVICEATTEMPT$
}

define command{
        command_name    vp-resolve
        command_line    /usr/share/tealium/server2server/bin/vp-resolve.sh $SERVICESTATE$ $SERVICESTATETYPE$ $SERVICEATTEMPT$
}

define command{
        command_name    event_handler
        command_line    /usr/lib/nagios/plugins/event-handler.sh $SERVICESTATE$ $SERVICESTATETYPE$ $SERVICEATTEMPT$ $ARG1$
        #command_line    /usr/lib/nagios/plugins/event-handler.sh $SERVICESTATE$ $SERVICESTATETYPE$ $SERVICEATTEMPT$ $ARG1$ $ARG2$ $ARG3$ $ARG4$ $ARG5$ $ARG6$ $ARG7$ $ARG8$ $ARG9$
}

define command{
        command_name    vp_handler
        command_line    /usr/lib/nagios/plugins/vp-handler.sh $SERVICESTATE$ $SERVICESTATETYPE$ $SERVICEATTEMPT$ $ARG1$ $ARG2$ $ARG3$
        #command_line    /usr/lib/nagios/plugins/event-handler.sh $SERVICESTATE$ $SERVICESTATETYPE$ $SERVICEATTEMPT$ $ARG1$ $ARG2$ $ARG3$ $ARG4$ $ARG5$ $ARG6$ $ARG7$ $ARG8$ $ARG9$
}

define command{
        command_name    dd_handler
        command_line    /usr/lib/nagios/plugins/dd-handler.sh $SERVICESTATE$ $SERVICESTATETYPE$ $SERVICEATTEMPT$ $ARG1$ $ARG2$ $ARG3$
}

#define command{
#        command_name    vp_restart
        #command_line    /usr/lib/nagios/plugins/event-handler.sh $SERVICESTATE$ $SERVICESTATETYPE$ $SERVICEATTEMPT$
        #command_line    /usr/lib/nagios/plugins/event-handler_vp.sh $SERVICESTATE$ $SERVICESTATETYPE$ $SERVICEATTEMPT$ $ARG1$ $ARG2$ $ARG3$ $ARG4$ $ARG5$ $ARG6$ $ARG7$ $ARG8$ $ARG9$
        #$USER1$/check_nrpe -H $HOSTADDRESS$ -c vp_restart
#}

define command{
        command_name    do_something
        command_line    /usr/share/tealium/server2server/bin/vp-resolve.sh $SERVICESTATE$ $SERVICESTATETYPE$ $SERVICEATTEMPT$
}


define command{
        command_name    eventstream_restart
        command_line    /usr/share/tealium/server2server/bin/eventstream_restart.sh SERVICESTATE$ $SERVICESTATETYPE$ $SERVICEATTEMPT$
}

define command{
        command_name    dc_uconnect_restart
        command_line    /usr/lib/nagios/plugins/dc_uconnect_restart.sh SERVICESTATE$ $SERVICESTATETYPE$ $SERVICEATTEMPT$
}

define command{
        command_name    esp_restart
        command_line    /usr/lib/nagios/plugins/esp_restart.sh SERVICESTATE$ $SERVICESTATETYPE$ $SERVICEATTEMPT$
}

define command{
        command_name    queue-purge
        command_line    /usr/lib/nagios/plugins/queue-purge.sh SERVICESTATE$ $SERVICESTATETYPE$ $SERVICEATTEMPT$
}

# Commands added through nagios_services data bags
<% @services.each do |service| -%>
define command {
  command_name check_<%= service['id'] %>
  command_line <%= service ['command_line'] %>
}
<% end -%>
