# Service definitions
#
# Autogenerated by Chef.

define service {
    use                 default-service
    host_name           *
    service_description ping
    check_command       check_ping!200.0,20%!500.0,60%
}

# monitoring service checks
define service {
    service_description Nagios
    hostgroup_name      <%= node['nagios']['server_role'] %>
    check_command       check-nagios
    contact_groups      admins
    use                 default-service
}

# Uncomment if you're using Munin
#define service {
#    service_description Munin Client
#    hostgroup_name      all
#    check_command       check_tcp!4949
#    use                 default-service
#}

# default checks for all hosts
# Uncomment if you're running chef-client as a daemon
#define service {
#    service_description Chef Client
#    hostgroup_name     base
#    check_command      check_chef_client
#    use                default-service
#}

define service {
    service_description Free Space All Disks
    hostgroup_name      linux
    check_command       check_all_disks
    use                 default-service
}

define service {
    service_description Nagios Client
    hostgroup_name      all
    check_command       check_tcp!5666
    use                 default-service
}

define service {
    service_description Check Jenkins 8080
    hostgroup_name      jenkins
    check_command       check_tcp!8080
    use                 default-service
}

define service {
    service_description Check Tealium aptrepo
    hostgroup_name      apt_repo
    check_command       check_tcp!8443
    use                 default-service
}
 
define service {
    service_description Check Nexus
    hostgroup_name      production_nexus
    check_command       check_tcp!8081
    use                 default-service
}

define service {
    service_description Check Tealium Website 80
    hostgroup_name      tealium_website
    check_command       check_http
    use                 default-service
}

define service {
    service_description HTTP Processes Auth
    hostgroup_name      nagios
    check_command       check_http_auth
    use                 default-service
}

define service {
    service_description Check rabbitmq epmd process
    hostgroup_name      rabbitmq_server
    check_command       check_nrpe!check_rabbitmq_epmd
    use                 default-service
}

define service {
    service_description Check rsyslog process
    hostgroup_name      all
    check_command       check_nrpe!check_rsyslog
    use                 default-service
}

define service {
    service_description Check rabbitmq beam process
    hostgroup_name      rabbitmq_server
    check_command       check_nrpe!check_rabbitmq_beam
    use                 default-service
}

define service {
    service_description Check rabbitmq-server
    hostgroup_name      rabbitmq_server
    check_command       check_nrpe!check_rabbitmq_server
    use                 default-service
}

define service {
    service_description Check S2S tag processor
    hostgroup_name      server2server
    check_command       check_nrpe!check_s2s_tag_processor_perl
    use                 default-service
}

define service {
    service_description Check S2S http
    hostgroup_name      server2server
    check_command       check_nrpe!check_s2s_http_perl
    use                 default-service
}

define service {
    service_description Check S2S tagger
    hostgroup_name      server2server
    check_command       check_nrpe!check_s2s_tagger_perl
    use                 default-service
}

define service {
    service_description Check VPN Process
    hostgroup_name      openvpn_access_server, openvpn_client, openvpn_server
    check_command       check_nrpe!check_openvpn
    use                 default-service
}

define service {
    service_description Check dnsmasq Process
    hostgroup_name      dnsmasq
    check_command       check_nrpe!check_dnsmasq
    use                 default-service
}

#define service {
#    service_description Check mongod Process
#    hostgroup_name      mongodb_config, mongodb_replicaset_1
#    check_command       check_nrpe!check_mongod
#    use                 default-service
#}

define service {
    service_description Load Average
    hostgroup_name      linux
    check_command       check_load
    use                 default-service
}

define service {
    service_description Free Memory
    hostgroup_name      linux
    check_command       check_mem
    use                 default-service
}

define service {
    service_description SSH
    hostgroup_name      linux
    check_command       check_ssh
    use                 default-service
}

define service {
    service_description Processes
    hostgroup_name      linux
    check_command       check_local_procs
    use                 default-service
}

define service {
  service_description   Check UTUI Logs
  hostgroup_name        utui
  check_command         check_nrpe!check_logfiles
  use                   default-service
}

define service {
  service_description   Check ntp sync
  hostgroup_name        all
  check_command         check_nrpe!check_ntp
  use                   default-service
}

define service {
  service_description   Check DigitalVelocity Website 8080
  hostgroup_name        tealium_website
  check_command         check_HTTP_8080
  use                   default-service
}

define service {
  service_description   Check mongos 27017
  hostgroup_name        mongos
  check_command         check_tcp!27017
  use                   default-service
}

define service {
  service_description   Check mongodb_config 27017
  hostgroup_name        mongodb_config
  check_command         check_tcp!27017
  use                   default-service
}

define service {
  service_description   Check mongodb_replicaset_1 27017
  hostgroup_name        mongodb_replicaset_1
  check_command         check_tcp!27017
  use                   default-service
}

define service {
  service_description   Check Nagios_auth
  hostgroup_name        nagios
  check_command         check_nagios_auth
  use                   default-service
}

define service {
  service_description   Check uconnect_service 9090
  hostgroup_name        uconnect_logger
  check_command         check_uconnect_service
  use                   default-service
}

define service {
  service_description   Check utui_service 8443
  hostgroup_name        utui
  check_command         check_utui_service
  use                   default-service
}

define service {
  service_description   Check urest_service
  hostgroup_name        urest
  check_command         check_urest_service
  use                   default-service
}

<% unless @service_hosts['monitoring'].nil? -%>
# If the monitoring host is a postfix relay, uncomment this.
#define service {
#    service_description Postfix
#    hostgroup_name      monitoring
#    check_command       check_nrpe!check_smtp
#    use                 default-service
#}

# If the monitoring host is a syslog server, uncomment this.
#define service {
#    service_description Rsyslog
#    hostgroup_name      monitoring
#    check_command       check_tcp!514
#    use                 default-service
#}

<% end -%>
<% unless @service_hosts['webserver'].nil? -%>
# basic web server http check
define service {
    service_description HTTP Processes
    hostgroup_name      webserver
    check_command       check_http
    use                 default-service
}

<% end -%>
<% unless @service_hosts['appserver'].nil? -%>
# basic check if appserver role is running unicorn
define service {
    service_description Unicorn Processes
    hostgroup_name      appserver
    check_command       check_nrpe!check_unicorn
    use                 default-service
}

define service {
    service_description Unicorn HTTP
    hostgroup_name      appserver
    check_command       check_http_port_expect!8080!"HTTP/1.1 302 Found"
    use                 default-service
}

<% end -%>
<% unless @service_hosts['database_master'].nil? -%>
# basic check if the database_master role is a mysql server
# database_master service checks
define service {
    service_description MySQL
    hostgroup_name      database_master
    check_command       check_nrpe!check_mysql_server
    use                 default-service
}

<% end -%>

# Services defined by data bags
<% @services.each do |service| -%>
  <% unless @service_hosts[service['hostgroup_name'].nil? && service['hostgroup_name'] != 'all' ] -%>
define service {
  service_description <%= service['id'] %>
  hostgroup_name <%= service['hostgroup_name'] %>
  check_command check_<%= service['id'] %>
  use default-service
}
  <% end -%>
<% end -%>
