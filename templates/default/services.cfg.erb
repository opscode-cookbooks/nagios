# Service definitions
#
# Autogenerated by Chef.

# monitoring service checks
define service {
    service_description Nagios
    hostgroup_name      <%= node['nagios']['server_role'] %>
    check_command       check-nagios
    contact_groups      admins
    use                 default-service
}

<% unless @service_hosts['webserver'].nil? -%>
# basic web server http check
define service {
    service_description HTTP Processes
    hostgroup_name      webserver
    check_command       check_http
    use                 default-service
}

<% end -%>
<% unless @service_hosts['appserver'].nil? -%>
# basic check if appserver role is running unicorn
define service {
    service_description Unicorn Processes
    hostgroup_name      appserver
    check_command       check_nrpe!check_unicorn
    use                 default-service
}

define service {
    service_description Unicorn HTTP
    hostgroup_name      appserver
    check_command       check_http_port_expect!8080!"HTTP/1.1 302 Found"
    use                 default-service
}

<% end -%>
<% unless @service_hosts['database_master'].nil? -%>
# basic check if the database_master role is a mysql server
# database_master service checks
define service {
    service_description MySQL
    hostgroup_name      database_master
    check_command       check_nrpe!check_mysql_server
    use                 default-service
}

<% end -%>

# Services defined by data bags
<% @services.each do |service| -%>
  <% unless @service_hosts[service['hostgroup_name'].nil? && service['hostgroup_name'] != 'all' ] -%>
define service {
  service_description <%= service['id'] %>
  hostgroup_name <%= service['hostgroup_name'] %>
  check_command check_<%= service['id'] %>
  use <% if service['service_template'].nil? -%>default-service<% else -%><%= service['service_template'] %> <% end -%>
}
  <% end -%>
<% end -%>
