# Template definitions
#
# Autogenerated by Chef.

define contact {
  name                            default-contact
  service_notification_period     24x7
  host_notification_period        24x7
  service_notification_options    w,u,c,r,f,s
  host_notification_options       d,u,r,f,s
#  service_notification_commands   service-notify-by-email, service-notify-by-jabber
  service_notification_commands   service-notify-by-email
#  host_notification_commands      host-notify-by-email, host-notify-by-sms-gateway, host-notify-by-jabber
  host_notification_commands      host-notify-by-email
  register                        0
}

define contact {
  name                            sms-contact
  service_notification_period     24x7
  host_notification_period        24x7
  service_notification_options    w,u,c,r,f,s
  host_notification_options       d,u,r,f,s
  service_notification_commands   service-notify-by-sms-gateway
  host_notification_commands      host-notify-by-sms-gateway
  register                        0
}

define host {
  name                            default-host
  notifications_enabled           1
  event_handler_enabled           1
  flap_detection_enabled          <%= nagios_boolean(nagios_attr(:default_host)[:flap_detection]) %>
  failure_prediction_enabled      1
  process_perf_data               1
  retain_status_information       1
  retain_nonstatus_information    1
  notification_period             24x7
  register                        0
}

define host {
  name                    server
  use                     default-host,host-pnp
  check_period            24x7
  check_interval          <%= nagios_interval(nagios_attr(:default_host)[:check_interval]) %>
  retry_interval          <%= nagios_interval(nagios_attr(:default_host)[:retry_interval]) %>
  max_check_attempts      <%= nagios_attr(:default_host)[:max_check_attempts] %>
  check_command           check-host-alive
  notification_interval   <%= nagios_interval(nagios_attr(:default_host)[:notification_interval]) %>
  notification_options    d,u,r
  contact_groups          <%= nagios_attr(:default_contact_groups).join(",") %>
  register                0
}


define service {
  name                            default-service
  active_checks_enabled           1
  passive_checks_enabled          1
  parallelize_check               1
  obsess_over_service             1
  check_freshness                 0
  notifications_enabled           1
  event_handler_enabled           1
  flap_detection_enabled          <%= nagios_boolean(nagios_attr(:default_service)[:flap_detection]) %>
  failure_prediction_enabled      1
  process_perf_data               1
  retain_status_information       1
  retain_nonstatus_information    1
  is_volatile                     0
  check_period                    24x7
  max_check_attempts              <%= nagios_attr(:default_service)[:max_check_attempts] %>
  check_interval                  <%= nagios_interval(nagios_attr(:default_service)[:check_interval]) %>
  retry_interval                  <%= nagios_interval(nagios_attr(:default_service)[:retry_interval]) %>
  contact_groups                  <%= nagios_attr(:default_contact_groups).join(",") %>
  notification_options            w,u,c,r
  notification_interval           <%= nagios_interval(nagios_attr(:default_service)[:notification_interval]) %>
  notification_period             24x7
  register                        0
}

define service {
  name                            rappid-rabbit
  use                             default-service
  check_interval                  120
  retry_interval                  120
}

define service {
  name				  load-service
  use                             default-service
  max_check_attempts              10
}

define service {
  name                            mem-service
  use                             default-service
  max_check_attempts              10
}

define service {
  name                            log-service
  use                             default-service
  max_check_attempts              1
  check_interval                  30
  notification_interval           0
}

define service {
  name                            jmx-service
  use                             default-service
  check_interval                  300
  retry_interval                  300
#  contact_groups                  dataclouders
}

define service {
  name                            uconnect-service
  use                             default-service
  max_check_attempts              6
  contact_groups                  uconnecters
}

define service {
  name                            datacloud-service
  use                             default-service
#  contact_groups                  dataclouders
}

define service {
  name                            ftp-error-service
  use                             passive-service
  contact_groups                  ftp_error
}

define service {
  name                            as-low-urgency-service
  use                             default-service
  contact_groups                  as_low_urgency
}

define service {
  name                            mongo-service
  use                             default-service
  max_check_attempts              1
  check_interval                  240
  notification_interval           0
  notification_period		  WorkStart
  contact_groups                  dbadmins
}

define service{ 
  use 				  default-service 
  name                            passive-service 
  active_checks_enabled           0 
  passive_checks_enabled          1                # We want only passive checking 
  flap_detection_enabled          0 
  register                        0                # This is a template, not a real service 
  is_volatile                     1 
  check_period                    24x7 
  max_check_attempts              1 
  normal_check_interval           5 
  retry_check_interval            1 
  check_freshness                 0 
  contact_groups                  admins
  check_command                   check_dummy!0 
  notification_interval           120 
  notification_period             24x7 
  notification_options            w,u,c,r 
  stalking_options                w,c,u 
} 

define service{
  use                             passive-service
  name                            passive-service-auto-healers
  contact_groups                  auto-healers
}

define service{
  use                             default-service
  name                            ntp-service
#  contact_groups                  as_low_urgency
}

define host {
   name       host-pnp
   action_url /pnp4nagios/index.php/graph?host=$HOSTNAME$&srv=_HOST_
   register   0
}

define service {
   name       srv-pnp
   action_url /pnp4nagios/index.php/graph?host=$HOSTNAME$&srv=$SERVICEDESC$
   register   0
}

# Define the log monitoring template (monitoring logs is very different)
define service{
	name                            default-logfile
	use                             default-service
	check_period                    24x7
	max_check_attempts              1
  check_interval                  <%= nagios_interval(nagios_attr(:default_service)[:check_interval]) %>
  retry_interval                  <%= nagios_interval(nagios_attr(:default_service)[:retry_interval]) %>
  contact_groups                  <%= nagios_attr(:default_contact_groups).join(",") %>
	notification_options            w,u,c,r
	notification_period             24x7
	register                        0
  is_volatile                     1
	}
